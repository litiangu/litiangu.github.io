{"meta":{"title":"大队长的博客","subtitle":"学习~摸鱼ing~","description":"啦~啦~啦","author":"不加冰不加糖","url":"http://yoursite.com","root":"/"},"pages":[{"title":"About","date":"2019-07-25T07:42:41.000Z","updated":"2019-07-25T09:55:35.535Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-07-25T07:42:05.000Z","updated":"2019-07-25T09:54:59.824Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-07-25T07:45:51.000Z","updated":"2019-07-25T09:55:56.815Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-07-29T02:59:16.000Z","updated":"2019-07-29T03:00:07.401Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"linux终端快捷指令","slug":"linux终端快捷指令","date":"2019-07-29T02:41:00.000Z","updated":"2019-07-29T03:07:01.825Z","comments":true,"path":"2019/07/29/linux终端快捷指令/","link":"","permalink":"http://yoursite.com/2019/07/29/linux终端快捷指令/","excerpt":"Ubuntu终端指令","text":"Ubuntu终端指令 Linux终端快捷指令 【移动光标】 Ctrl+A 标移到行首。它在多数文本编辑器和 Mozilla 的 URL 字段内可以使用。Ctrl+E 把光标移到行尾。它在多数文本编辑器和 Mozilla 的 URL 字段内都可使用。Alt+F 光标向前移动一个单词Alt+B **光标向后移动一个单词Ctrl+F 光标向前移动一个字符,相当与-&gt;Ctrl+B 光标向后移动一个字符,相当与&lt;–Esc+B** 移动到当前单词的开头Esc+F 移动到当前单词的结尾 【屏幕操作】CTRL+U 向上滚动半屏CTRL+D 向下滚动半屏**[Ctrl] + [l] **= 清屏。该快捷操作与在命令行键入 clear 作用相同。 【剪切、删除、粘贴】Ctrl+u 剪切命令行中光标所在处之前的所有字符（不包括自身）Ctrl+k 剪切命令行中光标所在处之后的所有字符（包括自身）[行尾]Ctrl+Y 粘贴刚才所删除的字符Ctrl+c 删除整行Ctrl+d 删除光标所在处字符 Ctrl+h 删除光标所在处前一个字符Ctrl+w 剪切光标所在处之前的一个词（以空格、标点等为分隔符） Alt+d 剪切光标之后的词 Esc+w 删除光标所在处之前的字符至其单词尾（以空格、标点等为分隔符） # 【字符编辑】Alt+u 把当前词转化为大写Alt+l 把当前词转化为小写Alt+c **把当前词汇变成首字符大写Ctrl+v 插入特殊字符,如Ctrl+v+Tab加入Tab字符键（输入控制字符 如Ctrl+v ,会输入M）**Esc+t 颠倒光标所在处及其相邻单词的位置Ctrl+t 颠倒光标所在处及其之前的字符位置，并将光标移动到下一个字符（ 交换光标前两个字符）Alt+t 交换当前与以前单词的位置Ctrl+(x u) 按住Ctrl的同时再先后按x和u，撤销刚才的操作 【命令历史】history 显示命令历史列表。在 shell 提示中键入它来显示你所键入的被编号的前 1000 个命令。要显示较短的命令历史，键入 history f之后，空一格，在键入一个数字。例如： history 20 。↑(Ctrl+p) 显示上一条命令 （你在当前目录下键入的命令历史）**↓(Ctrl+n) 显示下一条命令!! （执行）上一条命令ls !$ 执行命令ls，并以上一条命令的参数为其参数!num 执行命令历史列表的第num条命令!-n 倒数第N条历史命令!-n:p 打印上一条命令（不执行）!-n:gs/str1/str2/ – 将倒数第N条命令的str1替换为str2，并执行（若不加g,则仅替换第一个）!?string? 执行含有string字符串的最新命令Ctrl+r 然后输入若干字符，开始向上搜索包含该字符的命令，继续按Ctrl+r，搜索上一条匹配的命令[不能正常使用，与 挂起当前shell 冲突] Ctrl+s 与Ctrl+r类似,只是正向检索Alt+&lt; 历史列表第一项Alt+&gt; 历史列表最后一项** 【终端控制】Tab：命令行自动补全。使用 shell 提示时可使用这一命令。键入命令或文件名的前几个字符，然后按 [Tab] 键，它会自动补全命令或显示匹配你键入字符的所有命令。Ctrl+C 终止当前正在运行的程序。Ctrl+s 挂起当前shell **Ctrl+q 重新启用挂起的shell[Ctrl] + [d] = 从 shell 提示中注销（并关闭）。使用该快捷键，你就不必键入 exit 或 logout 。exit = 注销。在 shell 提示中键入它会注销当前的用户或根用户帐号。 [Ctrl] + [l] = 清屏幕。该快捷操作与在命令行键入 clear 作用相同。 clear = 清除 shell 提示屏幕。在命令行下键入它会清除所有这个 shell 提示屏幕中显示的数据。[Ctrl] + = 清除当前行。如果你在终端下工作，使用这一快捷操作可以清除从光标处到行首的字符。reset = 刷新 shell 提示屏幕。如果字符不清晰或乱码的话，在 shell 提示下键入这个命令会刷新屏幕。 【窗口或系统】[Ctrl] + [Alt] + [Backspace] *= *杀死你当前的 X 会话。杀死图形化桌面会话，把你返回到登录屏幕。如果正常退出步骤不起作用，你可以使用这种方法。（有时候在 X-Window里由于程序出错，使鼠标键盘都不起作用， 这时候不用着急， 因为在Linux下几乎不会像在Win 9x里那样恶性死机， 你只须键入Ctrl+Alt+BackSpace键就可以回到字符界面下了。） [Ctrl] + [Alt] + [Delete] *= *关机和重新引导 Red Hat Linux。关闭你当前的会话然后重新引导 OS。只有在正常关机步骤不起作用时才使用这种方法。 [Ctrl] + [Alt] + [Fn] = 切换屏幕。 [Ctrl] + [Alt] + 功能键之一会显示一个新屏幕。根据默认设置，从 [F1] 到 [F6] 是 shell 提示屏幕， [F7] 是图形化屏幕。 [Alt] + [Tab] = 在图形化桌面环境中切换任务。如果你同时打开了不止一个应用程序，你可以使用 [Alt] + [Tab] 来在打开的任务和应用程序间切换。","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://yoursite.com/categories/Ubuntu/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://yoursite.com/tags/Ubuntu/"}]},{"title":"解决git下载很慢的问题","slug":"解决git下载很慢的问题","date":"2019-07-29T02:04:48.000Z","updated":"2019-07-29T03:06:31.871Z","comments":true,"path":"2019/07/29/解决git下载很慢的问题/","link":"","permalink":"http://yoursite.com/2019/07/29/解决git下载很慢的问题/","excerpt":"通过镜像下载：https://npm.taobao.org/mirrors/git-for-windows/","text":"通过镜像下载：https://npm.taobao.org/mirrors/git-for-windows/","categories":[{"name":"git","slug":"git","permalink":"http://yoursite.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"},{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]},{"title":"git配置用户名 for Linux","slug":"Git 配置用户名","date":"2019-07-29T00:49:05.307Z","updated":"2019-07-29T03:06:54.139Z","comments":true,"path":"2019/07/29/Git 配置用户名/","link":"","permalink":"http://yoursite.com/2019/07/29/Git 配置用户名/","excerpt":"Git 配置用户名","text":"Git 配置用户名 Git配置用户名、邮箱、密码 配置用户名：usernamegit config –global user.name username 配置邮箱：user@emailgit config –global user.email user@email 配置密码git config –global credential.helper store 该命令会记住密码，执行一次 git pull 或 git push 等需要输入密码的命令，输入一次密码。 查看配置git config –list","categories":[{"name":"git","slug":"git","permalink":"http://yoursite.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"},{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]},{"title":"git安装for Linux","slug":"git","date":"2019-07-29T00:49:05.287Z","updated":"2019-07-29T03:06:47.013Z","comments":true,"path":"2019/07/29/git/","link":"","permalink":"http://yoursite.com/2019/07/29/git/","excerpt":"在Ubuntu16.04上安装git","text":"在Ubuntu16.04上安装git 安装git_ git必不可少，不得不装_（1）apt-get install git（不行到话，先update）git –version出现版本号表示成功了 （2）配置变量： git config –global user.name “Your Name” git config –global user.email “youremail@domain.com“ （3）生成公钥 ssh-keygen -C ‘you email ‘ -t rsa， 生成到公钥在用户目录下 修改用户邮箱与用户名 在自己提交代码到远程仓库后,如果显示自己的英文名,势必会给团队其他不熟悉你的英文名的同事带来困扰,尤其是出现一些bug的情况下,不能及时与你本人沟通,因此需要修改成自己的中文名cat ~/.gitconfig输入如下全局改变用户名 git config –global user.name ‘xxx’ #xxx为你输入的名字 修改后可以看到自己的git名字变成中文名了 修改成功,同时还可以修改自己的email,同上命令 git config –global user.email ‘XXXX@xx.xx’ #输入你要的邮箱 查看配置文件的位置位置1:/etc/gitconfig 系统级别的配置,适用于所有的用户和所有的库,可以使用 $git config –system 来指定和修改,存储在Git安装目录下位置2:~/.gitconfig** 用户级别的配置,适用于当前登录的用户,可以使用$git config –gloabal来指定和修改,存储在C:\\Documents and Settings$USER下位置3:.git/config** 库级别的配置,适用于某个具体的库,可以使用$git config来指定和修改,存储在具体的库隐藏的.git文件夹下 说明:Git会优先使用库级别的配置,再然后是global级别的配置,最后是system级别的配置. 解决每次拉取代码都需要用户名密码 执行git config –global credential.helper store，在~/.gitconfig目录下会多出一个文件，这里会记录你的密码和帐号； 再执行git pull 输入一次正确的帐号密码之后就不用再输入了。 linux中清除git记住密码的方法发现在当前用户的根目录下，有一个.git-credentials文件，git的用户名和密码明文存储在其中，如下图所示：git官网（https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%87%AD%E8%AF%81%E5%AD%98%E5%82%A8）介绍凭证存储的： git config –system –unset credential.helper 执行该命令，然后多次git pull，发现还是记住了密码，并生成了.git-credentials文件。查看项目本身的.git文件夹里能不能找到啥线索，发现config文件配置如下：会不会是最后helper参数的值为store引起的？于是直接把最后一行删除，再重新git pull，发现密码不再记住，而且也不再生成.git-credentials文件，终于搞定！","categories":[{"name":"git","slug":"git","permalink":"http://yoursite.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"},{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]},{"title":"git官方操作文档","slug":"git官方操作文档","date":"2019-07-29T00:49:05.279Z","updated":"2019-07-29T03:06:08.008Z","comments":true,"path":"2019/07/29/git官方操作文档/","link":"","permalink":"http://yoursite.com/2019/07/29/git官方操作文档/","excerpt":"git官方操作文档 查看链接：https://git-scm.com/book/zh/v2","text":"git官方操作文档 查看链接：https://git-scm.com/book/zh/v2","categories":[{"name":"git","slug":"git","permalink":"http://yoursite.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"},{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]},{"title":"git命令表","slug":"Git命令","date":"2019-07-29T00:49:05.271Z","updated":"2019-07-29T03:06:16.248Z","comments":true,"path":"2019/07/29/Git命令/","link":"","permalink":"http://yoursite.com/2019/07/29/Git命令/","excerpt":"在网上收集到此表，可供查看","text":"在网上收集到此表，可供查看 Git命令","categories":[{"name":"git","slug":"git","permalink":"http://yoursite.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"},{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]},{"title":"TiddlyWiki","slug":"TiddlyWiki","date":"2019-07-25T10:23:31.214Z","updated":"2019-07-25T10:31:43.566Z","comments":true,"path":"2019/07/25/TiddlyWiki/","link":"","permalink":"http://yoursite.com/2019/07/25/TiddlyWiki/","excerpt":"TiddlyWiki 搭建个人Wiki，博客？","text":"TiddlyWiki 搭建个人Wiki，博客？ 链接：http://www.tiddlywiki.cn/","categories":[{"name":"好用不火的软件","slug":"好用不火的软件","permalink":"http://yoursite.com/categories/好用不火的软件/"}],"tags":[{"name":"好用不火的软件","slug":"好用不火的软件","permalink":"http://yoursite.com/tags/好用不火的软件/"}]},{"title":"Notion","slug":"Notion","date":"2019-07-25T10:23:31.203Z","updated":"2019-07-25T10:31:37.173Z","comments":true,"path":"2019/07/25/Notion/","link":"","permalink":"http://yoursite.com/2019/07/25/Notion/","excerpt":"Notion Notion 自称是一款「将笔记、知识库和任务管理无缝整合的协作平台」。它具有无限的层级和相互链接的组织弹性，给笔记间的关系提供了足够自由的组织方式；它排版灵活，能够把笔记里的内容按块（Block）进行组织和拖拽，甚至可以做出 Trello 看板进行项目管理；它的内容类型丰富，可以嵌入图片、网页、文档甚至视频，几乎无所不能","text":"Notion Notion 自称是一款「将笔记、知识库和任务管理无缝整合的协作平台」。它具有无限的层级和相互链接的组织弹性，给笔记间的关系提供了足够自由的组织方式；它排版灵活，能够把笔记里的内容按块（Block）进行组织和拖拽，甚至可以做出 Trello 看板进行项目管理；它的内容类型丰富，可以嵌入图片、网页、文档甚至视频，几乎无所不能 链接：https://www.notion.so/ 少数派介绍Notion 链接：https://sspai.com/post/39694","categories":[{"name":"好用不火的软件","slug":"好用不火的软件","permalink":"http://yoursite.com/categories/好用不火的软件/"}],"tags":[{"name":"好用不火的软件","slug":"好用不火的软件","permalink":"http://yoursite.com/tags/好用不火的软件/"}]},{"title":"Feedly","slug":"Feedly","date":"2019-07-25T10:23:31.193Z","updated":"2019-07-25T10:31:51.315Z","comments":true,"path":"2019/07/25/Feedly/","link":"","permalink":"http://yoursite.com/2019/07/25/Feedly/","excerpt":"Feedly Feedly是一款第三方RSS阅读器","text":"Feedly Feedly是一款第三方RSS阅读器 链接：https://feedly.com/i/welcome","categories":[{"name":"好用不火的软件","slug":"好用不火的软件","permalink":"http://yoursite.com/categories/好用不火的软件/"}],"tags":[{"name":"好用不火的软件","slug":"好用不火的软件","permalink":"http://yoursite.com/tags/好用不火的软件/"}]},{"title":"Wix","slug":"Wix","date":"2019-07-25T10:23:31.184Z","updated":"2019-07-25T10:31:40.593Z","comments":true,"path":"2019/07/25/Wix/","link":"","permalink":"http://yoursite.com/2019/07/25/Wix/","excerpt":"Wix 利用Wix.com 製作免費網站與網頁。選一個絕美的免費網頁與網站範本,並用 Wix 網站幫手自訂一切,完全不用編碼技能。立即製作個人的免費網頁與網站吧!","text":"Wix 利用Wix.com 製作免費網站與網頁。選一個絕美的免費網頁與網站範本,並用 Wix 網站幫手自訂一切,完全不用編碼技能。立即製作個人的免費網頁與網站吧! 链接：https://zh.wix.com/","categories":[{"name":"好用不火的软件","slug":"好用不火的软件","permalink":"http://yoursite.com/categories/好用不火的软件/"}],"tags":[{"name":"好用不火的软件","slug":"好用不火的软件","permalink":"http://yoursite.com/tags/好用不火的软件/"}]},{"title":"shell命令系列","slug":"shell命令系列--数据统计","date":"2019-07-23T08:20:27.055Z","updated":"2019-07-29T01:21:31.596Z","comments":true,"path":"2019/07/23/shell命令系列--数据统计/","link":"","permalink":"http://yoursite.com/2019/07/23/shell命令系列--数据统计/","excerpt":"shell命令系列–数据统计 1.目的从使用场景上，介绍常用shell命令，进行数据统计的用法，命令偏小白，熟悉Linux环境的同学可以进行跳过或者快速看一遍即可，以下命令中只简单描述数据分析过程中，常用命令使用方法，而不会对命令本身做细致解释。shell命令用法很多，有的会很复杂，难以解释清楚，需要用到时候，可Google寻找解决","text":"shell命令系列–数据统计 1.目的从使用场景上，介绍常用shell命令，进行数据统计的用法，命令偏小白，熟悉Linux环境的同学可以进行跳过或者快速看一遍即可，以下命令中只简单描述数据分析过程中，常用命令使用方法，而不会对命令本身做细致解释。shell命令用法很多，有的会很复杂，难以解释清楚，需要用到时候，可Google寻找解决 2.学习环境Ubuntu 16.04LTS 3.练习数据可在本地桌面创建练习数据，如本人在路径： cd /home/litiangu/Desktop/ 进入到桌面后，创建一个文本数据，里面内容如下，共13行 12345678910111213学校,sex,age,city北大,男,20,北京北大,男,21,北京北大,男,20,北京北大,男,21,北京北大,男,20,北京南大,男,21,北京南大,女,20,上海南大,女,21,上海南大,女,20,上海南大,女,21,上海南大,女,20,上海南大,女,21,上海 命令如下touch userprofile.csv #创建文本vim userprofile.csv #编辑内容cat userprofile.csv #查看整个文件内容 创建好练习数据后，进入到统计场景 4.统计场景 4.1 行数 命令模板： wc -l 文件位置 代码样例 wc -l /home/…/userproflie.csv #如果当前路径为创建文件所在，那么可以省去绝对路径 #为简单所见，省去绝对路径，如下： wc -l userproflie.csv 执行效果： 该文件共13行 4.2 过滤关键词 命令模板： grep &#39;过滤词‘ 文件位置 代码样例 grep ‘北京’ userproflie.csv 执行效果： 过滤出含有‘北京’的行 还可过滤其他，如下图 4.3 选取某列 命令模板： cut -d&#39;分隔符‘ -fm,n 文件位置 代码样例 cut -d’,’ -f1,4 userprofile.csv #分隔符是逗号\",\"分割成4列 #m,n为选取列，如选取1 4两列 执行效果： 过滤出含有‘北京’的行 还可选取其他列，如下图 4.4 按某列进行排序 命令模板： sort -t&#39;分隔符&#39; -knr 文件位置 代码样例 *sort -t’,’ -k3r userprofile.csv * #分隔符是逗号”,”分割成4列#n为选取列，如选取第3列#r为倒排，降序排列，没有r就是升序排列 执行效果： 第3列降序排列,按照年龄从小到大排列 还可选取其他列，如下图 4.5 去重 命令模块： sort -u 文件路径 代码样例： sort -u userprofile.csv 执行效果： 4.6 场景组合 某文件行去重后行数 代码样例 sort -u userproflie.csv | wc -l # | 为管道符号，可以简单理解为把上一条命令执行后的结果输入到下一条命令 执行效果 文件按某列去重后排序 代码样例 cut -d’,’ -f3,4 userprofile.csv | sort -u | sort -t’,’ -k1r # | 为管道符号，可以简单理解为把上一条命令执行后的结果输入到下一条命令 #选取3,4列，去重后，按照年龄倒叙排列 执行效果","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}],"tags":[{"name":"shell","slug":"shell","permalink":"http://yoursite.com/tags/shell/"}]}]}